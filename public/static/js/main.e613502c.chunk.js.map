{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","evento","end","moment","toDate","start","eventAddNew","event","eventUpdated","eventDeleted","eventLoaded","checkingFiniish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","icon","title","text","msg","placeholder","onChange","Navbar","useSelector","onClick","faSignOutAlt","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formvalues","setFormvalues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","console","log","trim","length","getState","_id","eventStartAddNew","color","autoComplete","rows","AddNewFab","faPlusCircle","DeleteEventFab","faTrash","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","inSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"qOAAaA,EAEI,kBAFJA,EAGK,mBAHLA,EAKO,qBALPA,EAMI,uBANJA,EAUI,kBAVJA,EAWc,6BAXdA,EAYK,wBAZLA,EAaK,wBAbLA,EAcI,wBAdJA,EAkBW,qCAlBXA,EAoBE,eApBFA,EAuBG,gBCrBVC,EAAe,CACjBC,UAAU,G,QCcRD,EAAe,CACnBE,OAAQ,GACRC,YAAa,MCjBTH,EAAe,CACnBI,WAAW,GCGAC,EAAcC,YAAgB,CACvCC,GDDqB,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEJ,WAAW,IAEf,KAAKL,EACH,OAAO,2BACFS,GADL,IAEEJ,WAAW,IAGf,QACE,OAAOI,ICZTG,SFc2B,WAAmC,IAAlCH,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC/D,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEL,YAAaM,EAAOG,UAExB,KAAKb,EACH,OAAO,2BACFS,GADL,IAEEN,OAAO,CAAEO,EAAOG,SAAV,mBAAsBJ,EAAMN,WAEtC,KAAKH,EACH,OAAO,2BACFS,GADL,IAEEL,YAAa,OAEjB,KAAKJ,EACH,OAAO,2BACFS,GADL,IAEEN,OAAQM,EAAMN,OAAOW,KAAI,SAACC,GAAD,OACvBA,EAAEC,KAAON,EAAOG,QAAQG,GAAKN,EAAOG,QAAUE,OAGpD,KAAKf,EACH,OAAO,2BACFS,GADL,IAEEN,OAAQM,EAAMN,OAAOc,QAAO,SAACF,GAAD,OAC1BA,EAAEC,KAAOP,EAAML,YAAYY,MAE7BZ,YAAY,OAEd,KAAKJ,EACH,OAAO,2BACFS,GADL,IAEEN,OAAO,YAAKO,EAAOG,WAErB,KAAKb,EACH,OAAO,eACFC,GAEX,QACE,OAAOQ,IEvDTS,KHDuB,WAAgC,IAA/BT,EAA8B,uDAAxBR,EAAcS,EAAU,uCACtD,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIP,UAAS,GACNQ,EAAOG,SAElB,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIP,UAAS,IAEjB,KAAKF,EACD,MAAO,CACHE,UAAS,GAGjB,QACI,OAAOO,MIvBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAiBC,O,yDCRnBC,EAAUC,qDAEVC,EAAgB,SAAEC,EAAUC,GAA2B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAe,QAAXE,EACOE,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAe,oBAEnBC,KAAMC,KAAKC,UAAUP,MAM3BQ,EAAgB,SAAET,EAAUC,GAA2B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAOD,EAAI,CACdD,SACAG,QAAS,CACL,UAAUK,KAIXN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAe,mBACf,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,M,iBCpCpBY,EAAgB,SAAExC,GAI3B,OAAOA,EAAOW,KAAK,SAAA8B,GAAM,kCAClBA,GADkB,IAErBC,IAAKC,IAASF,EAAOC,KAAME,SAC3BC,MAAOF,IAAQF,EAAOI,OAAQD,eCmBhCE,EAAc,SAACC,GAAD,MAAY,CAC9BvC,KAAMX,EACNa,QAASqC,IAkCLC,EAAe,SAACD,GAAD,MAAY,CAC/BvC,KAAMX,EACNa,QAASqC,IAgCLE,EAAe,iBAAO,CAC1BzC,KAAMX,IAiBFqD,EAAc,SAAClD,GAAD,MAAa,CAC/BQ,KAAMX,EACNa,QAASV,ICrCLmD,EAAkB,iBAAO,CAC7B3C,KAAMX,IAGFuD,EAAQ,SAACC,GAAD,MAAW,CACvB7C,KAAMX,EACNa,QAAS2C,IAGEC,EAAc,WACzB,OAAM,SAAEC,GACNjB,aAAakB,QACbD,EAASE,KACTF,ED4B8B,CAChC/C,KAAMX,MCzBF4D,EAAS,iBAAO,CAAEjD,KAAMX,I,gBC/FjB6D,EAAU,WAA0B,IAAxB5D,EAAuB,uDAAR,GAEpC,EAA4B6D,mBAAS7D,GAArC,mBAAO8D,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAW/D,IAITiE,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,eCd3BK,GAAc,WACzB,IAAMZ,EAAWa,cAEjB,EAAkDV,EAAQ,CACxDW,OAAQ,oBACRC,UAAW,WAFb,mBAAOC,EAAP,KAAwBC,EAAxB,KAIQH,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAEhB,EAAwDZ,EAAQ,CAC9De,MAAO,SACPC,OAAQ,oBACRC,WAAY,SACZC,WAAY,WAJd,mBAAOC,EAAP,KAA2BC,EAA3B,KAOQL,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAoBnC,OACE,qBAAKG,UAAU,4BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,yCACA,uBAAMC,SAvBM,SAACpE,GFpBG,IAACqE,EAAOC,EEqB9BtE,EAAEuE,iBACF5B,GFtBuB0B,EEsBHZ,EFtBUa,EEsBFZ,EFrB9B,uCAAO,WAAOf,GAAP,iBAAA6B,EAAA,sEACc1D,EAAc,OAAQ,CAAEuD,QAAOC,YAAY,QADzD,cACCG,EADD,gBAEcA,EAAKC,OAFnB,QAECrD,EAFD,QAIIsD,IACPjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EACEH,EAAM,CACJuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAIf2B,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM/D,EAAKgE,MAlBV,2CAAP,yDE0CQ,UACE,qBAAKlB,UAAU,aAAf,SACE,uBACEvE,KAAK,OACLuE,UAAU,oBACVmB,YAAY,SACZjC,KAAK,SACLC,MAAOG,EACP8B,SAAU3B,MAGd,qBAAKO,UAAU,aAAf,SACE,uBACEvE,KAAK,WACLuE,UAAU,oBACVmB,YAAY,gBACZjC,KAAK,YACLC,MAAOI,EACP6B,SAAU3B,MAGd,qBAAKO,UAAU,aAAf,SACE,uBAAOvE,KAAK,SAASuE,UAAU,YAAYb,MAAM,kBAKvD,sBAAKa,UAAU,6BAAf,UACE,0CACA,uBAAMC,SA/CS,SAACpE,GAGtB,GAFAA,EAAEuE,iBAEER,IAAeC,EACjB,OAAQgB,IAAKC,KAAK,CAChBC,KAAM,QACNC,MAAO,UACPC,KAAM,yCFPe,IAACf,EAAOC,EAAUjB,EEU3CV,GFV0B0B,EEUDP,EFVQQ,EEUAP,EFVUV,EEUEQ,EFT/C,uCAAO,WAAOlB,GAAP,iBAAA6B,EAAA,sEACc1D,EACjB,WACA,CAAEuD,QAAOC,WAAUjB,QACnB,QAJG,cACCoB,EADD,gBAMcA,EAAKC,OANnB,QAMCrD,EAND,QAQIsD,IACPjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EACEH,EAAM,CACJuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAIf2B,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM/D,EAAKgE,MAtBV,2CAAP,yDE8CQ,UACE,qBAAKlB,UAAU,aAAf,SACE,uBACEvE,KAAK,OACLuE,UAAU,oBACVmB,YAAY,SACZjC,KAAK,QACLC,MAAQO,EACR0B,SAAWrB,MAGf,qBAAKC,UAAU,aAAf,SACE,uBACEvE,KAAK,QACLuE,UAAU,oBACVmB,YAAY,SACZjC,KAAK,SACLC,MAAQQ,EACRyB,SAAWrB,MAGf,qBAAKC,UAAU,aAAf,SACE,uBACEvE,KAAK,WACLuE,UAAU,oBACVmB,YAAY,gBACZjC,KAAK,aACLC,MAAQS,EACRwB,SAAWrB,MAIf,qBAAKC,UAAU,aAAf,SACE,uBACEvE,KAAK,WACLuE,UAAU,eACVmB,YAAY,0BACZjC,KAAK,aACLC,MAAQU,EACRuB,SAAWrB,MAIf,qBAAKC,UAAU,aAAf,SACE,uBACEvE,KAAK,SACLuE,UAAU,iBACVb,MAAM,+B,kBCtHTkC,GAAS,WAEpB,IAAOnC,EAASoC,aAAY,SAAA/F,GAAK,OAAIA,EAAMS,QAApCkD,KACDV,EAAWa,cAMjB,OACE,sBAAKW,UAAU,kCAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgCd,IAChC,yBACEc,UAAU,yBACVuB,QATe,WACnB/C,EAASD,MAMP,UAIA,cAAC,KAAD,CAAiBwC,KAAMS,KAAcxB,UAAU,SAJ/C,e,SClBOyB,GAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNnE,MAAO,SACPoE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXNC,GAAgB,SAAC,GAAa,IAAZvE,EAAW,EAAXA,MAGnBgD,EAAgBhD,EAAhBgD,MAAO1C,EAASN,EAATM,KACf,OACI,gCACI,iCAAS0C,IACT,uCAAW1C,EAAKY,Y,oBCPfsD,GAAc,iBAAO,CAC9B/G,KAAMX,ICMJ2H,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAKfC,KAAMC,cAAc,SAEpB,IAAMC,GAAMvF,MAASwF,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAG,SAE9BG,GAAY,CAChBzC,MAAO,GACP0C,MAAO,GACP5F,MAAOqF,GAAItF,SACXF,IAAK4F,GAAS1F,UAEH8F,GAAgB,WAC3B,IAAQxI,EAAcmG,aAAY,SAAC/F,GAAD,OAAWA,EAAMD,MAA3CH,UACAD,EAAgBoG,aAAY,SAAC/F,GAAD,OAAWA,EAAMG,YAA7CR,YACR,EAAkC0D,mBAASuE,GAAItF,UAA/C,mBAAO+F,EAAP,KAAkBC,EAAlB,KACA,EAA8BjF,mBAAS2E,GAAS1F,UAAhD,mBAAOiG,EAAP,KAAgBC,EAAhB,KACA,EAAoCnF,oBAAS,GAA7C,mBAAOoF,EAAP,KAAmBC,EAAnB,KACMzF,EAAWa,cACjB,EAAoCT,mBAAS6E,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEQT,EAA6BQ,EAA7BR,MAAO1C,EAAsBkD,EAAtBlD,MAAOlD,EAAeoG,EAAfpG,MAAOH,EAAQuG,EAARvG,IAG7ByG,qBAAU,WAGND,EAFGjJ,GAIWuI,MAGf,CAACvI,IAGJ,IAAM8D,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BkF,EAAc,2BACTD,GADQ,kBAEVjF,EAAOC,KAAOD,EAAOE,UAGpBkF,EAAa,WACjB7F,EDxD+B,CAC/B/C,KAAMX,ICwDN0D,ERzBwC,CAC1C/C,KAAMX,IQyBJqJ,EAAcV,KA6ChB,OACE,eAAC,KAAD,CACEa,OAAQnJ,EAERoJ,eAAgBF,EAChBG,eAAgB,IAChBC,MAAOhC,GACPzC,UAAU,QACV0E,iBAAiB,eAPnB,UASE,mCAAMxJ,EAAa,gBAAiB,eAApC,OACA,uBACA,uBAAM8E,UAAU,YAAYC,SAvCP,SAACpE,GRxCI,IAACmC,EQyC7BnC,EAAEuE,iBAEEtC,GAASH,IACXgH,QAAQC,IAAI,eACZ/D,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,sBACPC,KAAM,yDAIND,EAAM6D,OAAOC,OAAS,GACxBb,GAAc,GAGdzF,EADEtD,GRvDyB8C,EQwDCkG,ERvDhC,uCAAO,WAAO1F,GAAP,iBAAA6B,EAAA,+EAEgBhD,EAAc,UAAD,OAAWW,EAAMlC,IAAMkC,EAAO,OAF3D,cAEGsC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGrD,EAHH,QAKMsD,GACPhC,EAASP,EAAaD,IAEtB6C,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM/D,EAAKgE,MAXZ,kDAgBHyD,QAAQC,IAAR,MAhBG,0DAAP,uDAtC8B,SAAC5G,GAC/B,8CAAO,WAAOQ,EAAUuG,GAAjB,uBAAA1E,EAAA,+DACiB0E,IAAW/I,KAAzB4E,EADH,EACGA,IAAK1B,EADR,EACQA,KADR,kBAIgB7B,EAAc,SAAUW,EAAO,QAJ/C,cAIGsC,EAJH,gBAKgBA,EAAKC,OALrB,QAKGrD,EALH,QAOMsD,KACPxC,EAAMlC,GAAKoB,EAAKQ,OAAO5B,GACvBkC,EAAMM,KAAO,CACX0G,IAAKpE,EACL1B,KAAMA,GAERyF,QAAQC,IAAI5G,GACZQ,EAAST,EAAYC,KAdpB,kDAiBH2G,QAAQC,IAAR,MAjBG,0DAAP,wDQ+FaK,CAAiBf,IAG5BD,GAAc,GACdI,KAgBE,UACE,sBAAKrE,UAAU,aAAf,UACE,wDACA,uBACEvE,KAAK,iBACL2F,SA3DoB,SAACvF,GAC7BgI,EAAahI,EAAEoD,OAAOE,OACtBgF,EAAc,2BACTD,GADQ,IAEXpG,MAAOjC,EAAEoD,OAAOE,UAwDVA,MAAOyE,EACP5D,UAAU,0CAId,sBAAKA,UAAU,aAAf,UACE,qDACA,uBACEvE,KAAK,iBACL2F,SA9DkB,SAACvF,GAC3BkI,EAAWlI,EAAEoD,OAAOE,OACpBgF,EAAc,2BACTD,GADQ,IAEXvG,IAAK9B,EAAEoD,OAAOE,UA4DRA,MAAO2E,EACP9D,UAAU,qCACVyE,MAAOb,EAAYE,EAAU,CAAEoB,MAAO,OAAU,UAIpD,uBACA,sBAAKlF,UAAU,aAAf,UACE,mDACA,uBACEvE,KAAK,OACLuE,UAAS,wBAAkC,KAAfgE,GAAuB,cAEnD7C,YAAY,uBACZjC,KAAK,QACLiG,aAAa,MACbhG,MAAO6B,EACPI,SAAUpC,IAEZ,uBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAKF,sBAAKA,UAAU,aAAf,UACE,0BACEvE,KAAK,OACLuE,UAAU,eACVmB,YAAY,QACZiE,KAAK,IACLlG,KAAK,QACLC,MAAOuE,EACPtC,SAAUpC,IAEZ,uBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAKF,yBAAQvE,KAAK,SAASuE,UAAU,oCAAhC,UACE,mBAAGA,UAAU,gBACb,sDC7KGqF,I,YAAY,WAErB,IAAM7G,EAAWa,cAMjB,OACI,wBACIW,UAAU,MADd,SAIK,cAAC,KAAD,CACGA,UAAW,mBACXe,KAAMuE,KACN/D,QAZW,WACnB/C,EAASgE,aCLJ+C,GAAiB,WAC1B,IAAM/G,EAAWa,cAKjB,OACI,yBACIW,UAAY,4BACZuB,QAPa,WACjBoD,QAAQC,IAAI,UACZpG,EV6DN,uCAAO,WAAQA,EAAUuG,GAAlB,mBAAA1E,EAAA,6DAEGvE,EAAOiJ,IAAWrJ,SAASR,YAA3BY,GAFH,kBAMgBuB,EAAc,UAAD,OAAWvB,GAAM,GAAI,UANlD,cAMGwE,EANH,gBAOgBA,EAAKC,OAPrB,QAOGrD,EAPH,QASMsD,GACPhC,EAASN,EAAapC,IAEtB+E,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM/D,EAAKgE,MAfZ,kDAoBHyD,QAAQC,IAAR,MApBG,0DAAP,0DU1DM,UAII,cAAC,KAAD,CAAiB7D,KAAMyE,OACvB,sDCHZ5H,IAAO6H,OAAO,MAEd,IAAMC,GAAYC,aAAgB/H,KAgBrBgI,GAAiB,WAC5B,MAAgCtE,aAAY,SAAA/F,GAAK,OAAIA,EAAMG,YAAnDT,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YACR0F,EAAQU,aAAY,SAAA/F,GAAK,OAAIA,EAAMS,QAAnC4E,IACFpC,EAAWa,cACjB,EAAgCT,mBAC9BrB,aAAaC,QAAQ,aAAe,SADtC,mBAAOqI,EAAP,KAAiBC,EAAjB,KAIE1B,qBAAU,WACR5F,EX6DJ,uCAAO,WAAOA,GAAP,mBAAA6B,EAAA,+EAEgBhD,EAAc,UAF9B,cAEGiD,EAFH,gBAGgBA,EAAKC,OAHrB,OAGGrD,EAHH,OAIGjC,EAASwC,EAAcP,EAAK6I,SAElCvH,EAASL,EAAYlD,IANlB,kDAQH0J,QAAQC,IAAR,MARG,0DAAP,yDW5DK,CAACpG,IAgCN,OACE,sBAAKwB,UAAU,kBAAf,UACE,cAAC,GAAD,IAEA,cAAC,KAAD,CACE0F,UAAWA,GACXzK,OAAQA,EACR+K,cAAc,QACdC,YAAY,MACZxE,SAAUA,GACVyE,gBAzBoB,SAAClI,EAAOF,EAAOH,EAAKwI,GAU5C,MAAO,CACL1B,MARY,CACZ2B,gBAAkBxF,IAAQ5C,EAAMM,KAAK0G,IAAM,OAAQ,OACnDqB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTrB,MAAO,WAkBLsB,mBAxCe,SAAC3K,GACpB2C,EAASgE,OAwCLiE,cArCgB,SAAC5K,GACrB2C,EXlBsC,CACxC/C,KAAMX,EACNa,QWgB0BE,KAqCpB6K,OAjCe,SAAC7K,GACpBiK,EAAYjK,GACZ0B,aAAakD,QAAQ,WAAY5E,IAgC7B8K,KAAMd,EACNe,WAAY,CACV5I,MAAOuE,MAGX,cAAC,GAAD,IACA,cAAC,GAAD,IAEkB,OAAhBrH,EAAsB,cAAC,GAAD,IAAkB,S,4CC3FnC2L,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,cAACC,EAAD,eAAgBG,IAChB,cAAC,IAAD,CAAUC,GAAG,gB,mCCXxBC,GAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACLJ,EAEK,cAAC,IAAD,CAAUK,GAAG,MADb,cAACJ,EAAD,eAAgBG,SCH3BG,GAAY,WACvB,IAAM7I,EAAWa,cACjB,EAA0BiC,aAAY,SAAC/F,GAAD,OAAWA,EAAMS,QAA/ChB,EAAR,EAAQA,SAAU4F,EAAlB,EAAkBA,IAMlB,OAJAwD,qBAAU,WACR5F,Eb0CF,uCAAO,WAAOA,GAAP,iBAAA6B,EAAA,sEACchD,EAAc,cAD5B,cACCiD,EADD,gBAEcA,EAAKC,OAFnB,QAECrD,EAFD,QAKIsD,IACPjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EACEH,EAAM,CACJuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAIfV,EAASJ,KAhBN,2CAAP,yDazCG,CAACI,IAEAxD,EACK,8DAIP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,CACEsM,OAAK,EAACC,KAAK,SACXP,UAAW5H,GACX0H,kBAAoBlG,IAEtB,cAAC,GAAD,CACE0G,OAAK,EAACC,KAAK,IACXP,UAAWpB,GACXkB,kBAAoBlG,IAEtB,cAAC,IAAD,CAAUuG,GAAG,YChCRK,GAAc,WACvB,OACI,cAAC,IAAD,CAAUnL,MAASA,EAAnB,SACI,cAAC,GAAD,O,MCHZoL,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e613502c.chunk.js","sourcesContent":["export const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n\n    eventStartNew: '[event] Start add new',\n\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    //authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStarStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import { types } from \"../types/types\"\n\nconst initialState = {\n    checking: true,\n    // uid:null,\n    // name:null\n}\n\nexport const authReducer = (state=initialState, action)=> {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state, \n                checking:false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking:false\n            }\n        case types.authLogout:\n            return {\n                checking:false\n            }\n        \n        default:\n            return state\n    }\n}","import { types } from \"../types/types\";\n\n// {\n//   id: new Date().getTime(),\n//   title: \"Cumpleaños Antonita\",\n//   start: moment().toDate(),\n//   end: moment().add(2, \"hours\").toDate(),\n//   notes: \"Estudiar\",\n//   user: {\n//     uid: \"1234\",\n//     name: \"Miguel\",\n//   },\n// }\n\n\n\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [action.payload, ...state.events],\n      };\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) =>\n          e.id !== state.activeEvent.id\n        ),\n        activeEvent:null\n      };\n      case types.eventLoaded:\n        return {\n          ...state,\n          events: [...action.payload]\n        }\n        case types.eventLogout:\n          return {\n            ...initialState\n          }\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n})","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","//const baseUrl = process.env.REACT_APP_API_URL;\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data , method = 'GET') => {\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if( method === 'GET' ){\n        return fetch( url );\n    }else {\n        return fetch (url, {\n            method,\n            headers: {\n                'Content-type':'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\nconst fetchConToken = ( endpoint, data , method = 'GET') => {\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if( method === 'GET' ){\n        return fetch( url,{\n            method,\n            headers: {\n                'x-token':token\n            }\n        } );\n    }else {\n        return fetch (url, {\n            method,\n            headers: {\n                'Content-type':'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment'\n\nexport const prepareEvents = ( events ) => {\n\n    \n\n    return events.map( evento => ({\n        ...evento, \n        end: moment ( evento.end ).toDate(),\n        start: moment( evento.start ).toDate(),\n    }))\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n\n    try {\n      const resp = await fetchConToken(\"events\", event, \"POST\");\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        console.log(event);\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: body.msg,\n          //footer: '<a href=\"\">Why do I have this issue?</a>'\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\n\nexport const eventStartDelete = () => {\n  return async ( dispatch, getState ) => {\n\n    const { id } = getState().calendar.activeEvent\n\n\n    try {\n      const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted(id));\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: body.msg,\n          //footer: '<a href=\"\">Why do I have this issue?</a>'\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n\n  }\n}\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(\"events\");\n      const body = await resp.json();\n      const events = prepareEvents(body.eventos);\n\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\n\nexport const eventLogout = () => ({\n  type: types.eventLogout\n})","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: body.msg,\n      });\n    }\n  };\n};\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      { email, password, name },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: body.msg,\n      });\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n   \n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      dispatch(checkingFiniish());\n    }\n  };\n};\n\nconst checkingFiniish = () => ({\n  type: types.authCheckingFinish,\n});\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return( dispatch ) => {\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(eventLogout())\n  }\n}\n\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { startLogin, startRegister } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./login.css\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: \"antonia@gmail.com\",\n    lPassword: \"123456\",\n  });\n  const { lEmail, lPassword } = formLoginValues;\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: \"Miguel\",\n    rEmail: \"antonia@gmail.com\",\n    rPassword1: \"123456\",\n    rPassword2: \"123456\",\n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    \n    if( rPassword1 !== rPassword2){\n      return  Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Las contraseñas deben ser iguales',\n      })\n    }\n    dispatch( startRegister( rEmail, rPassword1, rName ))\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-5 login-form-1 mx-2\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control my-2\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control my-2\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-5 login-form-2 mx-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control my-2\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value= {rName}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control my-2\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value= {rEmail}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control my-2\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value= {rPassword1}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value= {rPassword2}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit my-2\"\n                value=\"Crear cuenta\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\n\nexport const Navbar = () => {\n\n  const {name } = useSelector(state => state.auth)\n  const dispatch = useDispatch();\n  \n  const handleLogout = () => {\n    dispatch(startLogout());\n  }\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button \n        className=\"btn btn-outline-danger\"\n        onClick={ handleLogout }\n        >\n      <FontAwesomeIcon icon={faSignOutAlt} className=\"mx-1\" />\n        Salir\n      </button>\n    </div>\n  );\n};\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n  \n\n    const { title, user } = event\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - { user.name }</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"react-modal\";\n//import DateTimePicker from \"react-datetime-picker\";\nimport { uiCloseModal } from \"../../actions/ui\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from \"../../actions/events\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\n\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst nowPlus1 = now.clone().add(1, \"hours\");\n\nconst initEvent = {\n  title: \"\",\n  notes: \"\",\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n}\nexport const CalendarModal = () => {\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n  const dispatch = useDispatch();\n  const [formvalues, setFormvalues] = useState(initEvent);\n\n  const { notes, title, start, end } = formvalues;\n\n\n  useEffect(() => {\n    if ( activeEvent ){\n\n      setFormvalues(activeEvent)\n    }else {\n      setFormvalues(initEvent)\n    }\n    \n  }, [activeEvent])\n\n\n  const handleInputChange = ({ target }) => {\n    setFormvalues({\n      ...formvalues,\n      [target.name]: target.value,\n    });\n  };\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent())\n    setFormvalues(initEvent)\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e.target.value);\n    setFormvalues({\n      ...formvalues,\n      start: e.target.value,\n    });\n  };\n  const handleEndDateChange = (e) => {\n    setDateEnd(e.target.value);\n    setFormvalues({\n      ...formvalues,\n      end: e.target.value,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    if (start >= end) {\n      console.log(\"error fecha\");\n      Swal.fire({\n        icon: \"error\",\n        title: \"Error en las fechas\",\n        text: \"La fecha incial no puede ser mayor a la fecha final\",\n        //footer: '<a href=\"\">Why do I have this issue?</a>'\n      });\n    }\n    if (title.trim().length < 2) {\n      setTitleValid(false);\n    }\n    if (activeEvent) {\n      dispatch( eventStartUpdate( formvalues))\n    } else {\n\n      dispatch(eventStartAddNew(formvalues))\n    }\n    //Realizar la grabacion en la base de datos.\n    setTitleValid(true);\n    closeModal();\n\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      closeTimeoutMS={200}\n      style={customStyles}\n      className=\"modal\"\n      overlayClassName=\" modal-fondo\"\n    >\n      <h1> {activeEvent? 'Editar evento': 'Nuevo evento'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <input\n            type=\"datetime-local\"\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control react-datetime-picker\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <input\n            type=\"datetime-local\"\n            onChange={handleEndDateChange}\n            //disabled = {dateStart > dateEnd? true:false}\n            value={dateEnd}\n            className=\"form-control react-datetime-picker\"\n            style={dateStart > dateEnd ? { color: \"red\" } : null}\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid === true && \"is-invalid\"}`}\n            //className='form-control is-valid'\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { uiOpenModal } from '../../actions/ui'\nimport { useDispatch } from 'react-redux'\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch()\n    \n    const handleClickNew = () => {\n        dispatch(uiOpenModal())\n    }\n    \n    return (\n        <button\n            className=\"btn\"\n            //onClick={console.log('object')}\n        >\n             <FontAwesomeIcon \n                className= \"text-primary fab\"\n                icon={faPlusCircle} \n                onClick={handleClickNew}\n                />\n        </button>\n    )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch()\n    const handleDelete = () => {\n        console.log('object')\n        dispatch(eventStartDelete())\n    }\n    return (\n        <button \n            className = \"btn btn-danger fab-danger\"\n            onClick = {handleDelete}\n            >\n            <FontAwesomeIcon icon={faTrash} />\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { messages } from \"../../helpers/calendar-messages-es\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport \"moment/locale/es\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { eventSetActive, eventStartLoading } from \"../../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\n// const events = [\n//   {\n//     title: \"Cumpleaños Antonita\",\n//     start: moment().toDate(),\n//     end: moment().add(2, \"hours\").toDate(),\n//     bgcolor: \"#fafafa\",\n//     notes: \"Estudiar\",\n//     user: {\n//       uid: \"1234\",\n//       name: \"Miguel\",\n//     },\n//   },\n// ];\n\nexport const CalendarScreen = () => {\n  const { events, activeEvent } = useSelector(state => state.calendar)\n  const { uid } = useSelector(state => state.auth)\n  const dispatch = useDispatch();\n  const [lastView, setLastView] = useState(\n    localStorage.getItem(\"lastView\") || \"month\"\n  );\n\n    useEffect(() => {\n      dispatch( eventStartLoading());\n    }, [dispatch])\n\n\n  const onDobleClick = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n    \n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem(\"lastView\", e);\n  };\n\n  const eventeStyleGetter = (event, start, end, inSelected) => {\n    \n\n    const style = {\n      backgroundColor: (uid === event.user._id)? \"blue\": \"grey\",\n      borderRadius: \"0px\",\n      opacity: 0.8,\n      display: \"block\",\n      color: \"white\",\n    };\n    return {\n      style,\n    };\n  };\n  //console.log(lastView)\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventeStyleGetter}\n        onDoubleClickEvent={onDobleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <CalendarModal />\n      <AddNewFab />\n      {\n        activeEvent !== null? <DeleteEventFab/>:null\n      }\n      \n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h2>Obteniendo información...</h2>;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute \n          exact path=\"/login\" \n          component={LoginScreen} \n          isAuthenticated={ !!uid }\n          />\n        <PrivateRoute \n          exact path=\"/\" \n          component={CalendarScreen} \n          isAuthenticated={ !!uid }\n          />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store = {store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}